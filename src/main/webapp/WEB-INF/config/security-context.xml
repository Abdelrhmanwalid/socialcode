<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">

	<http auto-config="true">
		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>

		<intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/register" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/j_spring_security_check" access="IS_AUTHENTICATED_ANONYMOUSLY" />

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<form-login login-page="/login" default-target-url="/home"
			authentication-failure-url="/login?error" username-parameter="email"
			password-parameter="password" always-use-default-target="true" />
		<logout logout-success-url="/login?logout" invalidate-session="true"
			logout-url="/logout" />
		<!--enable csrf protection -->
		<csrf />
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<!-- loginController -> password encoder -->
			<!--<password-encoder hash="bcrypt" /> -->
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email,password,true from Users where email= ?"
				authorities-by-username-query="select ? , 'ROLE_USER'" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>